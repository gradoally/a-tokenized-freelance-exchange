slice calculate_collection_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
                  .store_int(workchain, 8)
                  .store_uint(cell_hash(state_init), 256)
                .end_cell().begin_parse();
}

slice return_collection_addr_by_id (int collection_id) inline {
  load_data();
  (slice value, int f) = udict_get?(storage::collections, 8, collection_id);
  throw_unless(666, f);

  return value;
}

() deploy_collection (cell collection_code, cell collection_data) impure inline {
  load_data();
  cell state_init = (generate_init_state_with_data_no_library(collection_code, collection_data)).end_cell();
  slice collection_address = calculate_collection_address(state_init);

  messages::send_with_stateinit(0, collection_address, state_init, (begin_cell().end_cell()), CARRY_REMAINING_GAS);

  storage::collections~udict_set(8, storage::next_collection_index, collection_address);
  storage::next_collection_index += 1;
  save_data();
}